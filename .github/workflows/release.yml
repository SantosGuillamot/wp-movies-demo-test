name: Build Plugin ZIP

on:
    push:
        branches:
            - main

jobs:
    bump-version:
        runs-on: ubuntu-latest
        outputs:
            old_version: ${{ steps.get_version.outputs.old_version }}
            new_version: ${{ steps.get_version.outputs.new_version }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Compute old and new version
              id: get_version
              run: |
                  OLD_VERSION=$(jq --raw-output '.version' package.json)
                  echo "old_version=${OLD_VERSION}" >> $GITHUB_OUTPUT
                  NEW_VERSION=$(npx semver $OLD_VERSION -i patch)
                  echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

            - name: Configure git user name and email
              run: |
                  git config user.name github-actions[bot]
                  git config user.email 41898282+github-actions[bot]@users.noreply.github.com

            - name: Update plugin version
              env:
                  VERSION: ${{ steps.get_version.outputs.new_version }}
              run: |
                  cat <<< $(jq --tab --arg version "${VERSION}" '.version = $version' package.json) > package.json
                  cat <<< $(jq --tab --arg version "${VERSION}" '.version = $version' package-lock.json) > package-lock.json
                  sed -i "s/${{ steps.get_version.outputs.old_version }}/${VERSION}/g" gutenberg.php

            - name: Commit the version bump
              id: commit_version_bump
              run: |
                  git add gutenberg.php package.json package-lock.json
                  git commit -m "Bump plugin version to ${{ steps.get_version.outputs.new_version }}"
                  git push
                  echo "version_bump_commit=$(git rev-parse --verify --short HEAD)" >> $GITHUB_OUTPUT

    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install Composer dependencies
              run: composer install --no-dev

            - name: Install npm dependencies
              run: npm ci

            - name: Build plugin
              run: npm run build

            - name: Create plugin ZIP file
              run: npm run build-plugin

            - name: Create theme ZIP file
              run: npm run build-theme

            - name: Upload plugin ZIP
              uses: actions/upload-artifact@v3
              with:
                  name: wpmovies-plugin
                  path: ./wpmovies-plugin.zip

            - name: Upload theme ZIP
              uses: actions/upload-artifact@v3
              with:
                  name: wpmovies-thene
                  path: ./wpmovies-theme.zip
    create-release:
        needs: [bump-version, build]
        runs-on: ubuntu-latest

        steps:
            - name: Set Release Version
              id: get_release_version
              env:
                  VERSION: ${{ needs.bump-version.outputs.new_version }}
              run: echo "version=$(echo $VERSION | cut -d / -f 3 | sed 's/-rc./ RC/' )" >> $GITHUB_OUTPUT

            - name: Download Plugin Zip Artifact
              uses: actions/download-artifact@v3
              with:
                  name: wpmovies-plugin

            - name: Download Theme Zip Artifact
              uses: actions/download-artifact@v3
              with:
                  name: wpmovies-theme

            - name: Upload Plugin Asset
              id: upload-plugin-asset
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./wpmovies-plugin.zip
                  asset_name: wpmovies-plugin.zip
                  asset_content_type: application/zip

            - name: Upload Theme Asset
              id: upload-theme-asset
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./wpmovies-theme.zip
                  asset_name: wpmovies-theme.zip
                  asset_content_type: application/zip
